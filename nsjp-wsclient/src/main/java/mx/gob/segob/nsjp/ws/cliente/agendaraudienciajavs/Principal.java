package mx.gob.segob.nsjp.ws.cliente.agendaraudienciajavs;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;
import javax.xml.ws.Service;

/**
 * This class was generated by Apache CXF 2.4.1
 * 2012-06-08T17:04:00.864-05:00
 * Generated source version: 2.4.1
 * 
 */
@WebServiceClient(name = "Principal", 
                  wsdlLocation = "http://10.11.81.77:49560/new08-06-2012/Principal.asmx?WSDL",
                  targetNamespace = "http://tempuri.org/") 
public class Principal extends Service {

    public final static URL WSDL_LOCATION;

    public final static QName SERVICE = new QName("http://tempuri.org/", "Principal");
    public final static QName PrincipalSoap = new QName("http://tempuri.org/", "PrincipalSoap");
    public final static QName PrincipalSoap12 = new QName("http://tempuri.org/", "PrincipalSoap12");
    static {
        URL url = null;
        try {
            url = new URL("http://10.11.81.77:49560/new08-06-2012/Principal.asmx?WSDL");
        } catch (MalformedURLException e) {
            java.util.logging.Logger.getLogger(Principal.class.getName())
                .log(java.util.logging.Level.INFO, 
                     "Can not initialize the default wsdl from {0}", "http://10.11.81.77:49560/new08-06-2012/Principal.asmx?WSDL");
        }
        WSDL_LOCATION = url;
    }

    public Principal(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public Principal(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public Principal() {
        super(WSDL_LOCATION, SERVICE);
    }
    

    /**
     *
     * @return
     *     returns PrincipalSoap
     */
    @WebEndpoint(name = "PrincipalSoap")
    public PrincipalSoap getPrincipalSoap() {
        return super.getPort(PrincipalSoap, PrincipalSoap.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns PrincipalSoap
     */
    @WebEndpoint(name = "PrincipalSoap")
    public PrincipalSoap getPrincipalSoap(WebServiceFeature... features) {
        return super.getPort(PrincipalSoap, PrincipalSoap.class, features);
    }
    /**
     *
     * @return
     *     returns PrincipalSoap
     */
    @WebEndpoint(name = "PrincipalSoap12")
    public PrincipalSoap getPrincipalSoap12() {
        return super.getPort(PrincipalSoap12, PrincipalSoap.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns PrincipalSoap
     */
    @WebEndpoint(name = "PrincipalSoap12")
    public PrincipalSoap getPrincipalSoap12(WebServiceFeature... features) {
        return super.getPort(PrincipalSoap12, PrincipalSoap.class, features);
    }

}
